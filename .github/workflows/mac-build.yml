name: Mac Build

on:
  push:
    branches:
      - test-mac-build
  pull_request:
    branches:
      - test-mac-build

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - name: Set up environment variables
      run: |
        echo "BUILD_DIR=${{ github.workspace }}" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        brew update && \
        brew install \
          cmake \
          ninja \
          pkg-config \
          yasm \
          nasm \
          autoconf \
          automake \
          libtool \
          python3 \
          astyle   

    - name: Initialize vcpkg submodule
      run: |
        git submodule update --init --recursive
      
    - name: Bootstrap vcpkg
      run: |
        ./vcpkg/bootstrap-vcpkg.sh

    - name: Install CWIPC via Homebrew
      run: |
        brew tap cwi-dis/cwipc
        HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1 HOMEBREW_VERBOSE=1 brew install cwipc

    - name: Verify CWIPC installation
      run: |
        # Verify that CWIPC is installed correctly
        which cwipc_forward || echo "cwipc_forward not found in PATH"
        which cwipc_view || echo "cwipc_view not found in PATH"
        
    - name: Configure CMake
      run: |
        cd ${{ env.BUILD_DIR }} && \
        cmake --preset mac-production

    - name: Build the project
      run: |
        cd ${{ env.BUILD_DIR }} && \
        cmake --build build --preset mac-production  --parallel $(sysctl -n hw.logicalcpu)

    - name: Verify build outputs
      run: |
        echo "Verifying build outputs..."
        ls -l ${{ env.BUILD_DIR }}/build/bin

    - name: Run integration tests
      run: |
        cd ${{ env.BUILD_DIR }}
        
        # Make script executable
        chmod +x scripts/run-piepline-test.sh
        
        # Show environment
        echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
        echo "PYTHONPATH=$PYTHONPATH"
        
        # Run the pipeline test
        ./scripts/run-piepline-test.sh

    - name: Upload logs on failure
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          ${{ env.BUILD_DIR }}/build/CMakeFiles/CMakeOutput.log
          ${{ env.BUILD_DIR }}/build/CMakeFiles/CMakeError.log
          ${{ env.BUILD_DIR }}/vcpkg/buildtrees/**/*.log
          ${{ env.BUILD_DIR }}/logs/*.log

        retention-days: 5